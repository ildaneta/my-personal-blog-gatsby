{"version":3,"sources":["webpack:///./src/components/PostItem/style.js","webpack:///./src/components/PostItem/index.js","webpack:///./node_modules/@styled-icons/material/ArrowBackIos/ArrowBackIos.esm.js","webpack:///./node_modules/@styled-icons/material/ArrowForwardIos/ArrowForwardIos.esm.js","webpack:///./src/components/Pagination/style.js","webpack:///./src/components/Pagination/index.js","webpack:///./src/components/ListWrapper/style.js","webpack:///./src/components/templates/blog-list.js"],"names":["PostItemLink","styled","AniLink","media","lessThan","PostItemWrapper","section","PostItemTag","div","props","background","PostItemInfo","PostItemDate","time","PostItemTitle","h1","PostItemDescription","p","PostItem","slug","category","date","timeToRead","title","description","to","cover","direction","bg","getThemeColor","duration","ArrowBackIos","ref","iconAttrs","iconVerticalAlign","iconViewBox","d","key","fill","displayName","ArrowForwardIos","PaginationWrapper","ArrowLeft","ArrowRight","Pagination","isFirst","isLast","currentPage","numPages","prevPage","nextPage","ListWrapper","query","BlogList","postList","data","allMarkdownRemark","edges","pageContext","Layout","map","node","frontmatter","fields"],"mappings":"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","file":"component---src-components-templates-blog-list-js-4be8abbf31913f7f66a9.js","sourcesContent":["import styled from 'styled-components';\nimport media from 'styled-media-query';\n\nimport AniLink from 'gatsby-plugin-transition-link/AniLink';\n\nexport const PostItemLink = styled(AniLink)`\n  color: var(--colorLetters);\n  display: flex;\n  text-decoration: none;\n\n  &:hover {\n    color: var(--hover);\n  }\n\n  body#grid & {\n    background-color: var(--background);\n  }\n\n  ${media.lessThan('large')`\n    align-items: flex-start;\n    flex-direction: column;\n  `}\n`;\n\nexport const PostItemWrapper = styled.section`\n  border-bottom: 1px solid var(--rose);\n  padding: 2rem 2rem;\n  width: 100%;\n\n  body#grid & {\n    border: var(--rose);\n    padding: 2rem 1rem;\n    flex-direction: column;\n    justify-content: center;\n  }\n\n  ${media.lessThan('large')`\n      padding: 1rem;\n    `}\n`;\n\nexport const PostItemTag = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 3px;\n  background: ${props => props.background};\n  color: var(--white);\n  font-size: 1.3rem;\n  font-weight: 700;\n  text-transform: uppercase;\n  margin-left: 1.5rem;\n  margin-bottom: 15px;\n  flex-basis: auto;\n  width: 90px;\n  height: 40px;\n\n  ${media.lessThan('large')`\n    font-size: 1rem;\n    min-height: auto;\n    min-width: auto;\n    margin-left: 0;\n  `}\n`;\n\nexport const PostItemInfo = styled.div`\n  flex-direction: column;\n  margin-left: 1.5rem;\n\n  ${media.lessThan('large')`\n    margin: 0;\n  `}\n`;\n\nexport const PostItemDate = styled.time`\n  font-size: 0.9rem;\n  line-height: 1.2;\n`;\n\nexport const PostItemTitle = styled.h1`\n  font-size: 1.6rem;\n  font-weight: 700;\n  margin: 0.2rem 0 0.5rem;\n  line-height: 1.9rem;\n\n  body#grid & {\n    line-height: 1.1;\n    margin: 0.8rem 0;\n  }\n`;\n\nexport const PostItemDescription = styled.p`\n  font-size: 1.2rem;\n  font-weight: 300;\n  line-height: 1.2;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport getThemeColor from '../../utils/getThemeColor';\n\nimport {\n  PostItemLink,\n  PostItemWrapper,\n  PostItemTag,\n  PostItemInfo,\n  PostItemDate,\n  PostItemTitle,\n  PostItemDescription\n} from './style';\n\nconst PostItem = ({\n  slug,\n  category,\n  date,\n  timeToRead,\n  title,\n  description,\n  background\n}) => (\n  <PostItemLink\n    to={slug}\n    cover\n    direction=\"right\"\n    bg={getThemeColor()}\n    duration={0.6}\n  >\n    <PostItemWrapper>\n      <PostItemTag background={background}>{category}</PostItemTag>\n\n      <PostItemInfo>\n        <PostItemDate>\n          {date} â€¢ {timeToRead} min de leitura\n        </PostItemDate>\n        <PostItemTitle>{title}</PostItemTitle>\n        <PostItemDescription>{description}</PostItemDescription>\n      </PostItemInfo>\n    </PostItemWrapper>\n  </PostItemLink>\n);\n\nPostItem.propTypes = {\n  slug: PropTypes.string.isRequired,\n  background: PropTypes.string,\n  category: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  timeToRead: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired\n};\n\nexport default PostItem;\n","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var ArrowBackIos = React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return React.createElement(StyledIconBase, __assign({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), React.createElement(\"path\", {\n    d: \"M11.67 3.87L9.9 2.1 0 12l9.9 9.9 1.77-1.77L3.54 12z\",\n    key: \"k0\"\n  }), React.createElement(\"path\", {\n    fill: \"none\",\n    d: \"M0 0h24v24H0z\",\n    key: \"k1\"\n  }));\n});\nArrowBackIos.displayName = 'ArrowBackIos';\nexport var ArrowBackIosDimensions = {\n  height: 24,\n  width: 24\n};","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var ArrowForwardIos = React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return React.createElement(StyledIconBase, __assign({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), React.createElement(\"path\", {\n    d: \"M5.88 4.12L13.76 12l-7.88 7.88L8 22l10-10L8 2z\",\n    key: \"k0\"\n  }), React.createElement(\"path\", {\n    fill: \"none\",\n    d: \"M0 0h24v24H0z\",\n    key: \"k1\"\n  }));\n});\nArrowForwardIos.displayName = 'ArrowForwardIos';\nexport var ArrowForwardIosDimensions = {\n  height: 24,\n  width: 24\n};","import styled from 'styled-components';\nimport media from 'styled-media-query';\nimport { ArrowBackIos } from '@styled-icons/material/ArrowBackIos';\nimport { ArrowForwardIos } from '@styled-icons/material/ArrowForwardIos';\n\nexport const PaginationWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  border-top: 1px solid var(--rose);\n  color: var(--white);\n  padding: 1.5rem 3rem;\n\n  ${media.lessThan('large')`\n    font-size: .8rem;\n    padding: 1rem;\n  `}\n\n  a {\n    color: var(--colorLetters);\n    text-decoration: none;\n    transition: color 0.5s;\n    cursor: pointer;\n\n    &:hover {\n      color: var(--hover);\n    }\n  }\n\n  p {\n    color: var(--colorLetters);\n  }\n`;\n\nexport const ArrowLeft = styled(ArrowBackIos)`\n  color: var(--colorLetters);\n  width: 12px;\n  margin-right: 5px;\n\n  &:hover {\n    color: var(--hover);\n  }\n`;\n\nexport const ArrowRight = styled(ArrowForwardIos)`\n  color: var(--colorLetters);\n  width: 12px;\n  margin-left: 5px;\n\n  &:hover {\n    color: var(--hover);\n  }\n`;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport getThemeColor from '../../utils/getThemeColor';\n\nimport AniLink from 'gatsby-plugin-transition-link/AniLink';\n\nimport { PaginationWrapper, ArrowLeft, ArrowRight } from './style';\n\nconst Pagination = ({\n  isFirst,\n  isLast,\n  currentPage,\n  numPages,\n  prevPage,\n  nextPage\n}) => (\n  <PaginationWrapper>\n    {!isFirst && (\n      <AniLink\n        to={prevPage}\n        cover\n        direction=\"left\"\n        bg={getThemeColor()}\n        duration={0.6}\n      >\n        <ArrowLeft /> pÃ¡gina anterior\n      </AniLink>\n    )}\n    <p>\n      {currentPage} de {numPages}\n    </p>\n    {!isLast && (\n      <AniLink\n        to={nextPage}\n        cover\n        direction=\"right\"\n        bg={getThemeColor()}\n        duration={0.6}\n      >\n        prÃ³xima pÃ¡gina\n        <ArrowRight />\n      </AniLink>\n    )}\n  </PaginationWrapper>\n);\n\nPagination.propTypes = {\n  isFirst: propTypes.bool.isRequired,\n  isLast: propTypes.bool.isRequired,\n  currentPage: propTypes.number.isRequired,\n  numPages: propTypes.number.isRequired,\n  prevPage: propTypes.string,\n  nextPage: propTypes.string\n};\n\nexport default Pagination;\n","import styled from 'styled-components';\n\nexport const ListWrapper = styled.section`\n  body#grid & {\n    background-color: var(--rose);\n    border-bottom: 1px solid var(--rose);\n    display: grid;\n    grid-area: posts;\n    grid-gap: 1px;\n    grid-template-columns: repeat(auto-fit, minmax(380px, 1fr));\n    margin-top: -9px;\n  }\n`;\n","import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport Layout from '../Layout';\nimport SEO from '../seo.js';\nimport PostItem from '../PostItem';\nimport Pagination from '../Pagination';\n\nimport * as s from '../ListWrapper/style';\n\nconst BlogList = props => {\n  const postList = props.data.allMarkdownRemark.edges;\n\n  const { currentPage, numPages } = props.pageContext;\n  const isFirst = currentPage === 1;\n  const isLast = currentPage === numPages;\n  const prevPage = currentPage - 1 === 1 ? '/' : `/page/${currentPage - 1}`;\n  const nextPage = `/page/${currentPage + 1}`;\n\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n      <s.ListWrapper>\n        {postList.map(\n          ({\n            node: {\n              frontmatter: { category, date, description, title, background },\n              timeToRead,\n              fields: { slug }\n            }\n          }) => (\n            <PostItem\n              slug={slug}\n              category={category}\n              date={date}\n              timeToRead={timeToRead}\n              title={title}\n              description={description}\n              background={background}\n            />\n          )\n        )}\n      </s.ListWrapper>\n      <Pagination\n        isFirst={isFirst}\n        isLast={isLast}\n        currentPage={currentPage}\n        numPages={numPages}\n        prevPage={prevPage}\n        nextPage={nextPage}\n      />\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query PostList($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: frontmatter___date, order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            category\n            date(locale: \"pt-br\", formatString: \"DD [de] MMMM [de] YYYY\")\n            description\n            title\n            background\n          }\n          timeToRead\n        }\n      }\n    }\n  }\n`;\n\nexport default BlogList;\n"],"sourceRoot":""}